package org.ps5jb.client.payloads.umtx.impl2;

import org.ps5jb.client.payloads.umtx.common.DebugStatus;
import org.ps5jb.client.payloads.umtx.common.Executor;
import org.ps5jb.client.payloads.umtx.common.LoggingConfiguration;
import org.ps5jb.loader.Status;
import org.ps5jb.sdk.lib.LibKernel;

public class UmtxExploit implements Runnable {
    @Override
    public void run() {
        LoggingConfiguration loggingUi = LoggingConfiguration.createComponent();
        if (!loggingUi.render()) {
            DebugStatus.error("UMTX execution aborted");
            return;
        }

        // It seems more stable to run the exploit in a separate thread on a separate core and wait
        final UmtxExploitJob umtxJob = new UmtxExploitJob();
        Executor.runInNewThread("UMTX Main", umtxJob, (job) -> umtxJob.finished, 4, (short) 767);
    }
}
